#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.71.
#
# Copyright (C) 2009-2017, 2020-2021 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi


if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="as_nop=:
if test \${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else \$as_nop
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" )
then :

else \$as_nop
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
blah=\$(echo \$(echo blah))
test x\"\$blah\" = xblah || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null
then :
  as_have_required=yes
else $as_nop
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null
then :

else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    as_run=a "$as_shell" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if as_run=a "$as_shell" -c "$as_bourne_compatible""$as_suggested" 2>/dev/null
then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :

else $as_nop
  if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      as_run=a "$SHELL" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi
fi


      if test "x$CONFIG_SHELL" != x
then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno
then :
  printf "%s\n" "$0: This script requires a shell more modern than all"
  printf "%s\n" "$0: the shells that I found on your system."
  if test ${ZSH_VERSION+y} ; then
    printf "%s\n" "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    printf "%s\n" "$0: be upgraded to zsh 4.3.4 or later."
  else
    printf "%s\n" "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit
# as_fn_nop
# ---------
# Do nothing but, unlike ":", preserve the value of $?.
as_fn_nop ()
{
  return $?
}
as_nop=as_fn_nop

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { printf "%s\n" "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'


rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=no
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;testsuite.at:7;nc/bears.nc.1.bescmd;bescmd data dap2;
2;testsuite.at:8;nc/bears.nc.2.bescmd;bescmd;
3;testsuite.at:10;nc/coads_climatology.nc.0.bescmd;bescmd;
4;testsuite.at:11;nc/coads_climatology.nc.ddx.bescmd;bescmd;
5;testsuite.at:12;nc/fnoc1.nc.0.bescmd;bescmd;
6;testsuite.at:13;nc/fnoc1.nc.1.bescmd;bescmd;
7;testsuite.at:14;nc/fnoc1.nc.2.bescmd;bescmd;
8;testsuite.at:15;nc/test.nc.0.bescmd;bescmd;
9;testsuite.at:16;nc/test.nc.1.bescmd;bescmd;
10;testsuite.at:17;nc/test.nc.2.bescmd;bescmd;
11;testsuite.at:18;nc/test.nc.2a.bescmd;bescmd;
12;testsuite.at:20;nc/fnoc1.nc.3.bescmd;bescmd data dap2;
13;testsuite.at:21;nc/test.nc.3.bescmd;bescmd data dap2;
14;testsuite.at:22;nc/test.nc.3a.bescmd;bescmd data dap2;
15;testsuite.at:26;nc/coads_climatology.nc.dmr.bescmd;bescmd;
16;testsuite.at:29;nc/coads_d4c_nm_lc.dap.bescmd;bescmd data dap4;
17;testsuite.at:30;nc/coads_d4c_nm.dap.bescmd;bescmd data dap4;
18;testsuite.at:31;nc/coads_d4c_m.dap.bescmd;bescmd data dap4;
19;testsuite.at:32;nc/coads_d4c_m_lc.dap.bescmd;bescmd data dap4;
20;testsuite.at:33;nc/coads_d4c_m_vc.dap.bescmd;bescmd data dap4;
21;testsuite.at:34;nc/coads_d4c_m_vlc.dap.bescmd;bescmd data dap4;
22;testsuite.at:38;nc/fnoc1.nc.dmr.bescmd;bescmd;
23;testsuite.at:40;nc/fnoc1.nc.dap.bescmd;bescmd data dap4;
24;testsuite.at:51;nc/zero_length_array.nc.0.bescmd;bescmd;
25;testsuite.at:52;nc/zero_length_array.nc.1.bescmd;bescmd;
26;testsuite.at:53;nc/zero_length_array.nc.2.bescmd;bescmd;
27;testsuite.at:54;nc/zero_length_array.nc.3.bescmd;bescmd data dap2;
28;testsuite.at:55;nc/zero_length_array.nc.4.bescmd;bescmd;
29;testsuite.at:56;nc/zero_length_array.nc.5.bescmd;bescmd data dap4;
30;testsuite.at:74;nc/fnoc1.nc.function.ddx.bescmd;bescmd;
31;testsuite.at:75;nc/fnoc1.nc.function.dods.bescmd;bescmd data dap2;
32;testsuite.at:84;nc/string_attribute_values.nc.0.bescmd;bescmd;
33;testsuite.at:85;nc/string_attribute_values.nc.1.bescmd;bescmd;
34;testsuite.at:96;nc/nc4_nc_classic_no_comp.nc.0.bescmd;bescmd;
35;testsuite.at:97;nc/nc4_nc_classic_no_comp.nc.1.bescmd;bescmd;
36;testsuite.at:98;nc/nc4_nc_classic_no_comp.nc.2.bescmd;bescmd;
37;testsuite.at:100;nc/nc4_nc_classic_no_comp.nc.3.bescmd;bescmd data dap2;
38;testsuite.at:104;nc/nc4_nc_classic_compressed.nc.0.bescmd;bescmd;
39;testsuite.at:105;nc/nc4_nc_classic_compressed.nc.1.bescmd;bescmd;
40;testsuite.at:106;nc/nc4_nc_classic_compressed.nc.2.bescmd;bescmd;
41;testsuite.at:108;nc/nc4_nc_classic_compressed.nc.3.bescmd;bescmd data dap2;
42;testsuite.at:112;nc/nc4_unsigned_types.nc.0.bescmd;bescmd;
43;testsuite.at:113;nc/nc4_unsigned_types.nc.1.bescmd;bescmd;
44;testsuite.at:114;nc/nc4_unsigned_types.nc.2.bescmd;bescmd;
45;testsuite.at:116;nc/nc4_unsigned_types.nc.3.bescmd;bescmd data dap2;
46;testsuite.at:120;nc/nc4_unsigned_types_comp.nc.0.bescmd;bescmd;
47;testsuite.at:121;nc/nc4_unsigned_types_comp.nc.1.bescmd;bescmd;
48;testsuite.at:122;nc/nc4_unsigned_types_comp.nc.2.bescmd;bescmd;
49;testsuite.at:124;nc/nc4_unsigned_types_comp.nc.3.bescmd;bescmd data dap2;
50;testsuite.at:128;nc/nc4_strings.nc.0.bescmd;bescmd;
51;testsuite.at:129;nc/nc4_strings.nc.1.bescmd;bescmd;
52;testsuite.at:130;nc/nc4_strings.nc.2.bescmd;bescmd;
53;testsuite.at:132;nc/nc4_strings.nc.3.bescmd;bescmd data dap2;
54;testsuite.at:136;nc/nc4_strings_comp.nc.0.bescmd;bescmd;
55;testsuite.at:137;nc/nc4_strings_comp.nc.1.bescmd;bescmd;
56;testsuite.at:138;nc/nc4_strings_comp.nc.2.bescmd;bescmd;
57;testsuite.at:140;nc/nc4_strings_comp.nc.3.bescmd;bescmd data dap2;
58;testsuite.at:144;nc/ref_tst_compound.nc.0.bescmd;bescmd;
59;testsuite.at:145;nc/ref_tst_compound.nc.1.bescmd;bescmd;
60;testsuite.at:146;nc/ref_tst_compound.nc.2.bescmd;bescmd;
61;testsuite.at:148;nc/ref_tst_compound.nc.3.bescmd;bescmd data dap2;
62;testsuite.at:152;nc/ref_tst_compound2.nc.0.bescmd;bescmd;
63;testsuite.at:153;nc/ref_tst_compound2.nc.1.bescmd;bescmd;
64;testsuite.at:154;nc/ref_tst_compound2.nc.2.bescmd;bescmd;
65;testsuite.at:156;nc/ref_tst_compound2.nc.3.bescmd;bescmd data dap2;
66;testsuite.at:160;nc/ref_tst_compound3.nc.0.bescmd;bescmd;
67;testsuite.at:161;nc/ref_tst_compound3.nc.1.bescmd;bescmd;
68;testsuite.at:162;nc/ref_tst_compound3.nc.2.bescmd;bescmd;
69;testsuite.at:164;nc/ref_tst_compound3.nc.3.bescmd;bescmd data dap2;
70;testsuite.at:168;nc/ref_tst_compound4.nc.1.bescmd;bescmd;
71;testsuite.at:169;nc/ref_tst_compound4.nc.2.bescmd;bescmd;
72;testsuite.at:171;nc/ref_tst_compound4.nc.3.bescmd;bescmd data dap2;
73;testsuite.at:175;nc/ref_tst_compound5.nc.1.bescmd;bescmd;
74;testsuite.at:176;nc/ref_tst_compound5.nc.2.bescmd;bescmd;
75;testsuite.at:178;nc/ref_tst_compound5.nc.3.bescmd;bescmd data dap2;
76;testsuite.at:182;nc/ref_tst_opaque_data.nc.0.bescmd;bescmd;
77;testsuite.at:183;nc/ref_tst_opaque_data.nc.1.bescmd;bescmd;
78;testsuite.at:184;nc/ref_tst_opaque_data.nc.2.bescmd;bescmd;
79;testsuite.at:186;nc/ref_tst_opaque_data.nc.3.bescmd;bescmd data dap2;
80;testsuite.at:190;nc/ref_tst_enum_data.nc.0.bescmd;bescmd;
81;testsuite.at:191;nc/ref_tst_enum_data.nc.1.bescmd;bescmd;
82;testsuite.at:192;nc/ref_tst_enum_data.nc.2.bescmd;bescmd;
83;testsuite.at:194;nc/ref_tst_enum_data.nc.3.bescmd;bescmd data dap2;
84;testsuite.at:197;nc/ref_tst_enum_data_1.nc.3.bescmd;bescmd data dap2;
85;testsuite.at:200;nc/ref_tst_enum_data_2.nc.3.bescmd;bescmd data dap2;
86;testsuite.at:203;nc/nc4_nc_classic_compressed.nc.dmr.bescmd;bescmd;
87;testsuite.at:204;nc/nc4_nc_classic_no_comp.nc.dmr.bescmd;bescmd;
88;testsuite.at:205;nc/nc4_strings.nc.dmr.bescmd;bescmd;
89;testsuite.at:206;nc/nc4_strings_comp.nc.dmr.bescmd;bescmd;
90;testsuite.at:207;nc/nc4_unsigned_types.nc.dmr.bescmd;bescmd;
91;testsuite.at:208;nc/nc4_unsigned_types_comp.nc.dmr.bescmd;bescmd;
92;testsuite.at:209;nc/ref_tst_compound.nc.dmr.bescmd;bescmd;
93;testsuite.at:210;nc/ref_tst_compound2.nc.dmr.bescmd;bescmd;
94;testsuite.at:211;nc/ref_tst_compound3.nc.dmr.bescmd;bescmd;
95;testsuite.at:212;nc/ref_tst_compound4.nc.dmr.bescmd;bescmd;
96;testsuite.at:213;nc/ref_tst_compound5.nc.dmr.bescmd;bescmd;
97;testsuite.at:214;nc/ref_tst_enum_data.nc.dmr.bescmd;bescmd;
98;testsuite.at:215;nc/ref_tst_enum_data_1.nc.dmr.bescmd;bescmd;
99;testsuite.at:216;nc/ref_tst_enum_data_2.nc.dmr.bescmd;bescmd;
100;testsuite.at:217;nc/ref_tst_opaque_data.nc.dmr.bescmd;bescmd;
101;testsuite.at:218;nc/stringtest.nc.dmr.bescmd;bescmd;
102;testsuite.at:221;nc/nc4_nc_classic_compressed.nc.dap.bescmd;bescmd data dap4;
103;testsuite.at:222;nc/nc4_nc_classic_no_comp.nc.dap.bescmd;bescmd data dap4;
104;testsuite.at:223;nc/nc4_strings.nc.dap.bescmd;bescmd data dap4;
105;testsuite.at:224;nc/nc4_strings_comp.nc.dap.bescmd;bescmd data dap4;
106;testsuite.at:225;nc/nc4_unsigned_types.nc.dap.bescmd;bescmd data dap4;
107;testsuite.at:226;nc/nc4_unsigned_types_comp.nc.dap.bescmd;bescmd data dap4;
108;testsuite.at:227;nc/ref_tst_compound.nc.dap.bescmd;bescmd data dap4;
109;testsuite.at:228;nc/ref_tst_compound2.nc.dap.bescmd;bescmd data dap4;
110;testsuite.at:229;nc/ref_tst_compound3.nc.dap.bescmd;bescmd data dap4;
111;testsuite.at:230;nc/ref_tst_compound4.nc.dap.bescmd;bescmd data dap4;
112;testsuite.at:231;nc/ref_tst_compound5.nc.dap.bescmd;bescmd data dap4;
113;testsuite.at:232;nc/ref_tst_enum_data.nc.dap.bescmd;bescmd data dap4;
114;testsuite.at:233;nc/ref_tst_enum_data_1.nc.dap.bescmd;bescmd data dap4;
115;testsuite.at:235;nc/ref_tst_opaque_data.nc.dap.bescmd;bescmd data dap4;
116;testsuite.at:236;nc/stringtest.nc.dap.bescmd;bescmd data dap4;
117;testsuite.at:239;nc/zero_length_array.nc.6.bescmd;bescmd;
118;testsuite.at:240;nc/zero_length_array.nc.7.bescmd;bescmd;
119;testsuite.at:241;nc/zero_length_array.nc.8.bescmd;bescmd data dap2;
120;testsuite.at:243;nc/zero_length_array.nc.9.bescmd;bescmd;
121;testsuite.at:244;nc/zero_length_array.nc.10.bescmd;bescmd data dap4;
122;testsuite.at:246;nc/string_attribute_values.nc.2.bescmd;bescmd;
123;testsuite.at:247;nc/string_attribute_values.nc.3.bescmd;bescmd;
"
# List of the all the test groups.
at_groups_all=`printf "%s\n" "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 123; then
      printf "%s\n" "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}
# List of the tested programs.
at_tested='"besstandalone"'


##
## Set up package specific options.
##

at_arg_given_baselines=false

at_arg_given_conf=false


at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`printf "%s\n" "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`printf "%s\n" "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`printf "%s\n" "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`printf "%s\n" "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`printf "%s\n" "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;
    --baselines | -b )
	at_prev=--baselines
	;;
    --baselines=* | -b=* )
	at_arg_baselines=$at_optarg
	at_arg_given_baselines=:
	echo "baselines set to $at_arg_baselines";
     baselines=$at_arg_baselines
	;;

    --conf | -c )
	at_prev=--conf
	;;
    --conf=* | -c=* )
	at_arg_conf=$at_optarg
	at_arg_given_conf=:
	echo "bes configuration file set to $at_arg_conf"; bes_conf=$at_arg_conf
	;;


    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`printf "%s\n" "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) printf "%s\n" "$as_me: invalid option: $at_option" >&2
	printf "%s\n" "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"
then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`printf "%s\n" "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

##
## Process package specific options when _not_ supplied.
##

if $at_arg_given_baselines
then :

else $as_nop
  baselines=
fi

if $at_arg_given_conf
then :

else $as_nop
  bes_conf=bes.conf
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 enable colored test results on terminal, or always
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Other options:
_ATEOF

cat <<_ATEOF || at_write_fail=1
--baselines=yes|no   Build the baseline file for parser test 'arg'
_ATEOF
cat <<_ATEOF || at_write_fail=1
--conf=<file>   Use <file> for the bes.conf file
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <support@opendap.org>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
bes 3.21.0 test suite: bes/modules/netcdf_handler/tests testsuite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  printf "%s\n" "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  printf "%s\n" "$as_me (bes 3.21.0)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2021 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`printf "%s\n" "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
printf "%s\n" "## ------------------------------------------------------------------ ##
## bes 3.21.0 test suite: bes/modules/netcdf_handler/tests testsuite. ##
## ------------------------------------------------------------------ ##"
{
  printf "%s\n" "## ------------------------------------------------------------------ ##
## bes 3.21.0 test suite: bes/modules/netcdf_handler/tests testsuite. ##
## ------------------------------------------------------------------ ##"
  echo

  printf "%s\n" "$as_me: command line was:"
  printf "%s\n" "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    printf "%s\n" "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    printf "%s\n" "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    printf "%s\n" "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    printf "%s\n" "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  printf "%s\n" "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  printf "%s\n" "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do printf "%s\n" "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	printf "%s\n" "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	printf "%s\n" "$3: hard failure"; exit 99;;
    *) printf "%s\n" "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test ${ZSH_VERSION+y} && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    printf "%s\n" "cd '$at_dir'" &&
    printf "%s\n" "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  printf "%s\n" "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : `eval echo $at_tested`
do
  case $at_program in #(
  :) :
    continue ;; #(
  [\\/]* | ?:[\\/]*) :
    at_program_=$at_program ;; #(
  *) :
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -f "$as_dir$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir$at_program ;;
esac

  if test -f "$at_program_"; then
    {
      printf "%s\n" "$at_srcdir/testsuite.at:3: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  printf "%s\n" "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
printf "%s\n" "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"
then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
printf "%s\n" "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet printf %s "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <support@opendap.org>.
_ATEOF
    printf "%s\n" "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose printf %s "$at_group. $at_setup_line: "
  printf %s "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    printf "%s\n" "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    printf "%s\n" " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      printf "%s\n" "$at_log_msg" >> "$at_group_log"
      printf "%s\n" "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      printf "%s\n" "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
printf "%s\n" "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test ${TMOUT+y} && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`printf "%s\n" "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
printf "%s\n" "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
printf "%s\n" "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
printf "%s\n" "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    printf "%s\n" "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
printf "%s\n" "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  printf "%s\n" "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    printf "%s\n" "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      printf "%s\n" "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  at_msg1a=${at_xpass_list:+', '}
  at_msg1=$at_fail_list${at_fail_list:+" failed$at_msg1a"}
  at_msg2=$at_xpass_list${at_xpass_list:+" passed unexpectedly"}

  printf "%s\n" "Please send $at_msg and all information you think might help:

   To: <support@opendap.org>
   Subject: [bes 3.21.0] $as_me: $at_msg1$at_msg2

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'testsuite.at:7' \
  "nc/bears.nc.1.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "1. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/bears.nc.1.bescmd
    baseline=$abs_srcdir/nc/bears.nc.1.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:7" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:7"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/bears.nc.1.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:7: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:7"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:7: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:7"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:7: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:7"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:7: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:7"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'testsuite.at:8' \
  "nc/bears.nc.2.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "2. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/bears.nc.2.bescmd
    baseline=$abs_srcdir/nc/bears.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/bears.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:8: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:8"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:8: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:8"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:8: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:8"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:8: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:8"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'testsuite.at:10' \
  "nc/coads_climatology.nc.0.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "3. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_climatology.nc.0.bescmd
    baseline=$abs_srcdir/nc/coads_climatology.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_climatology.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:10: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:10"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:10"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:10: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:10"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:10"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:10: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:10"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:10"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:10: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:10"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:10"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'testsuite.at:11' \
  "nc/coads_climatology.nc.ddx.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "4. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_climatology.nc.ddx.bescmd
    baseline=$abs_srcdir/nc/coads_climatology.nc.ddx.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_climatology.nc.ddx.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:11: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:11"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:11: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:11"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:11: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:11"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:11: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:11"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'testsuite.at:12' \
  "nc/fnoc1.nc.0.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "5. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.0.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:12: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:12"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:12: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:12"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:12: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:12"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:12: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:12"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'testsuite.at:13' \
  "nc/fnoc1.nc.1.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "6. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.1.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:13: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:13"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:13"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:13: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:13"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:13"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:13: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:13"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:13"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:13: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:13"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:13"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'testsuite.at:14' \
  "nc/fnoc1.nc.2.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "7. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.2.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:14: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:14"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:14: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:14"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:14: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:14"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:14: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:14"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'testsuite.at:15' \
  "nc/test.nc.0.bescmd" "                            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "8. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.0.bescmd
    baseline=$abs_srcdir/nc/test.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/test.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:15: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:15"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:15"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:15: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:15"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:15"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:15: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:15"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:15"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:15: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:15"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:15"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'testsuite.at:16' \
  "nc/test.nc.1.bescmd" "                            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "9. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.1.bescmd
    baseline=$abs_srcdir/nc/test.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/test.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:16: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:16"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:16: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:16"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:16: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:16"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:16: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:16"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'testsuite.at:17' \
  "nc/test.nc.2.bescmd" "                            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "10. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.2.bescmd
    baseline=$abs_srcdir/nc/test.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/test.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:17: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:17"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:17: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:17"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:17: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:17"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:17: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:17"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'testsuite.at:18' \
  "nc/test.nc.2a.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "11. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.2a.bescmd
    baseline=$abs_srcdir/nc/test.nc.2a.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/test.nc.2a.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:18: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:18"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:18: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:18"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:18: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:18"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:18: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:18"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'testsuite.at:20' \
  "nc/fnoc1.nc.3.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "12. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.3.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:20" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:20"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/fnoc1.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:20: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:20"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:20: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:20"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:20: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:20"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:20: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:20"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'testsuite.at:21' \
  "nc/test.nc.3.bescmd" "                            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "13. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.3.bescmd
    baseline=$abs_srcdir/nc/test.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:21" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:21"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/test.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:21: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:21"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:21: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:21"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:21: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:21"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:21: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:21"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'testsuite.at:22' \
  "nc/test.nc.3a.bescmd" "                           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "14. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/test.nc.3a.bescmd
    baseline=$abs_srcdir/nc/test.nc.3a.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:22" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:22"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/test.nc.3a.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:22: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:22"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:22: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:22"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:22: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:22"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:22: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:22"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'testsuite.at:26' \
  "nc/coads_climatology.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "15. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_climatology.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/coads_climatology.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_climatology.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:26: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:26"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:26: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:26"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:26: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:26"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:26: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:26"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'testsuite.at:29' \
  "nc/coads_d4c_nm_lc.dap.bescmd" "                  "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "16. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_nm_lc.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_nm_lc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_nm_lc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:29: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:29"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:29: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:29"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:29: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:29"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:29: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:29"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'testsuite.at:30' \
  "nc/coads_d4c_nm.dap.bescmd" "                     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "17. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_nm.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_nm.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_nm.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:30: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:30"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:30: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:30"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:30: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:30"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:30: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:30"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'testsuite.at:31' \
  "nc/coads_d4c_m.dap.bescmd" "                      "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "18. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_m.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_m.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_m.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:31: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:31"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:31: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:31"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:31: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:31"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:31: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:31"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'testsuite.at:32' \
  "nc/coads_d4c_m_lc.dap.bescmd" "                   "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "19. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_m_lc.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_m_lc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_m_lc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:32: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:32"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:32: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:32"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:32: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:32"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:32: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:32"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'testsuite.at:33' \
  "nc/coads_d4c_m_vc.dap.bescmd" "                   "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "20. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_m_vc.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_m_vc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_m_vc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:33: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:33"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:33: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:33"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:33: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:33"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:33: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:33"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'testsuite.at:34' \
  "nc/coads_d4c_m_vlc.dap.bescmd" "                  "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "21. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/coads_d4c_m_vlc.dap.bescmd
    baseline=$abs_srcdir/nc/coads_d4c_m_vlc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/coads_d4c_m_vlc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:34: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:34"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:34: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:34"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:34: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:34"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:34: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:34"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'testsuite.at:38' \
  "nc/fnoc1.nc.dmr.bescmd" "                         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "22. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:38: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:38"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:38: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:38"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:38: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:38"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:38: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:38"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'testsuite.at:40' \
  "nc/fnoc1.nc.dap.bescmd" "                         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "23. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.dap.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:40: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:40"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:40: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:40"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:40: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:40"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:40: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:40"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'testsuite.at:51' \
  "nc/zero_length_array.nc.0.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "24. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.0.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:51: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:51"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:51: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:51"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:51: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:51"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:51: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:51"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'testsuite.at:52' \
  "nc/zero_length_array.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "25. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.1.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:52: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:52"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:52: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:52"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:52: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:52"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:52: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:52"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'testsuite.at:53' \
  "nc/zero_length_array.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "26. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.2.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:53: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:53"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:53: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:53"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:53: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:53"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:53: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:53"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'testsuite.at:54' \
  "nc/zero_length_array.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "27. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.3.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:54" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:54"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/zero_length_array.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:54: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:54"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:54: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:54"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:54: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:54"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:54: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:54"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'testsuite.at:55' \
  "nc/zero_length_array.nc.4.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "28. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.4.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.4.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.4.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:55: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:55"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:55: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:55"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:55: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:55"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:55: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:55"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'testsuite.at:56' \
  "nc/zero_length_array.nc.5.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "29. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.5.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.5.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.5.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:56: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:56"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:56: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:56"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:56: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:56"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:56: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:56"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'testsuite.at:74' \
  "nc/fnoc1.nc.function.ddx.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "30. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.function.ddx.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.function.ddx.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/fnoc1.nc.function.ddx.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:74: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:74"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:74: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:74"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:74: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:74"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:74: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:74"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'testsuite.at:75' \
  "nc/fnoc1.nc.function.dods.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "31. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/fnoc1.nc.function.dods.bescmd
    baseline=$abs_srcdir/nc/fnoc1.nc.function.dods.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:75" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:75"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/fnoc1.nc.function.dods.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:75: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:75"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:75: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:75"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:75: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:75"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:75: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:75"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'testsuite.at:84' \
  "nc/string_attribute_values.nc.0.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "32. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/string_attribute_values.nc.0.bescmd
    baseline=$abs_srcdir/nc/string_attribute_values.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/string_attribute_values.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:84: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:84"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:84: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:84"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:84: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:84"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:84: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:84"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'testsuite.at:85' \
  "nc/string_attribute_values.nc.1.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "33. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/string_attribute_values.nc.1.bescmd
    baseline=$abs_srcdir/nc/string_attribute_values.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/string_attribute_values.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:85: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:85"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:85: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:85"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:85: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:85"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:85: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:85"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'testsuite.at:96' \
  "nc/nc4_nc_classic_no_comp.nc.0.bescmd" "          "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "34. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:96: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:96"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:96: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:96"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:96: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:96"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:96: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:96"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'testsuite.at:97' \
  "nc/nc4_nc_classic_no_comp.nc.1.bescmd" "          "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "35. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:97: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:97"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:97: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:97"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:97: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:97"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:97: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:97"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'testsuite.at:98' \
  "nc/nc4_nc_classic_no_comp.nc.2.bescmd" "          "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "36. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:98: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:98"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:98: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:98"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:98: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:98"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:98: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:98"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'testsuite.at:100' \
  "nc/nc4_nc_classic_no_comp.nc.3.bescmd" "          "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "37. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:100" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:100"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:100: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:100"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:100: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:100"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:100: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:100"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:100: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:100"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'testsuite.at:104' \
  "nc/nc4_nc_classic_compressed.nc.0.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "38. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:104: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:104"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:104: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:104"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:104: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:104"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:104: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:104"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'testsuite.at:105' \
  "nc/nc4_nc_classic_compressed.nc.1.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "39. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:105: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:105"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:105: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:105"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:105: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:105"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:105: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:105"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'testsuite.at:106' \
  "nc/nc4_nc_classic_compressed.nc.2.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "40. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:106: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:106"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:106: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:106"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:106: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:106"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:106: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:106"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'testsuite.at:108' \
  "nc/nc4_nc_classic_compressed.nc.3.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "41. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:108" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:108"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:108: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:108"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:108: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:108"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:108: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:108"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:108: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:108"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'testsuite.at:112' \
  "nc/nc4_unsigned_types.nc.0.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "42. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:112: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:112"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:112: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:112"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:112: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:112"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:112: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:112"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'testsuite.at:113' \
  "nc/nc4_unsigned_types.nc.1.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "43. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:113: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:113"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:113: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:113"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:113: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:113"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:113: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:113"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'testsuite.at:114' \
  "nc/nc4_unsigned_types.nc.2.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "44. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:114: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:114"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:114: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:114"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:114: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:114"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:114: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:114"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'testsuite.at:116' \
  "nc/nc4_unsigned_types.nc.3.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "45. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:116" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:116"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_unsigned_types.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:116: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:116"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:116: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:116"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:116: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:116"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:116: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:116"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'testsuite.at:120' \
  "nc/nc4_unsigned_types_comp.nc.0.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "46. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:120: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:120"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:120: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:120"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:120: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:120"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:120: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:120"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'testsuite.at:121' \
  "nc/nc4_unsigned_types_comp.nc.1.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "47. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:121: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:121"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:121: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:121"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:121: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:121"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:121: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:121"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'testsuite.at:122' \
  "nc/nc4_unsigned_types_comp.nc.2.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "48. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:122: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:122"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:122: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:122"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:122: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:122"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:122: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:122"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'testsuite.at:124' \
  "nc/nc4_unsigned_types_comp.nc.3.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "49. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:124" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:124"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:124: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:124"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:124: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:124"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:124: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:124"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:124: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:124"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'testsuite.at:128' \
  "nc/nc4_strings.nc.0.bescmd" "                     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "50. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:128: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:128"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:128: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:128"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:128: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:128"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:128: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:128"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'testsuite.at:129' \
  "nc/nc4_strings.nc.1.bescmd" "                     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "51. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:129: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:129"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:129: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:129"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:129: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:129"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:129: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:129"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'testsuite.at:130' \
  "nc/nc4_strings.nc.2.bescmd" "                     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "52. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:130: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:130"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:130: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:130"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:130: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:130"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:130: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:130"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'testsuite.at:132' \
  "nc/nc4_strings.nc.3.bescmd" "                     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "53. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:132" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:132"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_strings.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:132: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:132"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:132: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:132"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:132: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:132"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:132: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:132"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'testsuite.at:136' \
  "nc/nc4_strings_comp.nc.0.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "54. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.0.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings_comp.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:136: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:136"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:136: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:136"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:136: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:136"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:136: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:136"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'testsuite.at:137' \
  "nc/nc4_strings_comp.nc.1.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "55. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.1.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings_comp.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:137: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:137"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:137: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:137"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:137: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:137"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:137: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:137"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:137"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'testsuite.at:138' \
  "nc/nc4_strings_comp.nc.2.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "56. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.2.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings_comp.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:138: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:138"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:138: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:138"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:138: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:138"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:138: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:138"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'testsuite.at:140' \
  "nc/nc4_strings_comp.nc.3.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "57. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.3.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:140" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:140"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/nc4_strings_comp.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:140: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:140"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:140: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:140"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:140: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:140"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:140: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:140"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:140"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'testsuite.at:144' \
  "nc/ref_tst_compound.nc.0.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "58. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.0.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:144: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:144"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:144: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:144"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:144: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:144"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:144: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:144"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'testsuite.at:145' \
  "nc/ref_tst_compound.nc.1.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "59. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:145: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:145"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:145: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:145"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:145: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:145"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:145: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:145"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'testsuite.at:146' \
  "nc/ref_tst_compound.nc.2.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "60. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:146: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:146"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:146: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:146"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:146: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:146"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:146: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:146"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'testsuite.at:148' \
  "nc/ref_tst_compound.nc.3.bescmd" "                "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "61. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:148" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:148"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_compound.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:148: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:148"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:148: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:148"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:148: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:148"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:148: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:148"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'testsuite.at:152' \
  "nc/ref_tst_compound2.nc.0.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "62. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.0.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound2.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:152: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:152"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:152: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:152"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:152: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:152"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:152: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:152"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'testsuite.at:153' \
  "nc/ref_tst_compound2.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "63. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound2.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:153: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:153"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:153: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:153"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:153: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:153"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:153: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:153"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'testsuite.at:154' \
  "nc/ref_tst_compound2.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "64. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound2.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:154: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:154"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:154: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:154"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:154: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:154"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:154: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:154"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'testsuite.at:156' \
  "nc/ref_tst_compound2.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "65. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:156" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:156"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_compound2.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:156: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:156"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:156: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:156"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:156: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:156"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:156: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:156"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'testsuite.at:160' \
  "nc/ref_tst_compound3.nc.0.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "66. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.0.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound3.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:160: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:160"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:160: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:160"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:160: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:160"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:160: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:160"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'testsuite.at:161' \
  "nc/ref_tst_compound3.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "67. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound3.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:161: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:161"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:161: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:161"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:161: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:161"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:161: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:161"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'testsuite.at:162' \
  "nc/ref_tst_compound3.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "68. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound3.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:162: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:162"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:162: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:162"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:162: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:162"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:162: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:162"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'testsuite.at:164' \
  "nc/ref_tst_compound3.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "69. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:164" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:164"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_compound3.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:164: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:164"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:164: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:164"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:164: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:164"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:164: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:164"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'testsuite.at:168' \
  "nc/ref_tst_compound4.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "70. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound4.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound4.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound4.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:168: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:168"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:168: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:168"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:168: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:168"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:168: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:168"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'testsuite.at:169' \
  "nc/ref_tst_compound4.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "71. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound4.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound4.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound4.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:169: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:169"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:169: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:169"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:169: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:169"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:169: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:169"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'testsuite.at:171' \
  "nc/ref_tst_compound4.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "72. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound4.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound4.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:171" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:171"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_compound4.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:171: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:171"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:171: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:171"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:171: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:171"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:171: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:171"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'testsuite.at:175' \
  "nc/ref_tst_compound5.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "73. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound5.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound5.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound5.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:175: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:175"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:175: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:175"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:175: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:175"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:175: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:175"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'testsuite.at:176' \
  "nc/ref_tst_compound5.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "74. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound5.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound5.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound5.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:176: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:176"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:176: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:176"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:176: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:176"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:176: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:176"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:176"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'testsuite.at:178' \
  "nc/ref_tst_compound5.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "75. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound5.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound5.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:178" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:178"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_compound5.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:178: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:178"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:178: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:178"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:178: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:178"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:178: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:178"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:178"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'testsuite.at:182' \
  "nc/ref_tst_opaque_data.nc.0.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "76. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.0.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_opaque_data.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:182: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:182"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:182: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:182"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:182: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:182"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:182: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:182"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'testsuite.at:183' \
  "nc/ref_tst_opaque_data.nc.1.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "77. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_opaque_data.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:183: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:183"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:183: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:183"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:183: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:183"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:183: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:183"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'testsuite.at:184' \
  "nc/ref_tst_opaque_data.nc.2.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "78. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_opaque_data.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:184: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:184"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:184: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:184"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:184: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:184"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:184: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:184"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:184"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'testsuite.at:186' \
  "nc/ref_tst_opaque_data.nc.3.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "79. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:186" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:186"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_opaque_data.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:186: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:186"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:186: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:186"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:186: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:186"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:186: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:186"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'testsuite.at:190' \
  "nc/ref_tst_enum_data.nc.0.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "80. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.0.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.0.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data.nc.0.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:190: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:190"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:190: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:190"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:190: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:190"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:190: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:190"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'testsuite.at:191' \
  "nc/ref_tst_enum_data.nc.1.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "81. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.1.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.1.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data.nc.1.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:191: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:191"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:191: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:191"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:191: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:191"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:191: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:191"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:191"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'testsuite.at:192' \
  "nc/ref_tst_enum_data.nc.2.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "82. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.2.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:192: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:192"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:192: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:192"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:192: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:192"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:192: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:192"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:192"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'testsuite.at:194' \
  "nc/ref_tst_enum_data.nc.3.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "83. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:194" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:194"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_enum_data.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:194: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:194"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:194: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:194"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:194: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:194"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:194: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:194"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'testsuite.at:197' \
  "nc/ref_tst_enum_data_1.nc.3.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "84. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data_1.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data_1.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:197" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:197"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_enum_data_1.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:197: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:197"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:197: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:197"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:197: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:197"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:197: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:197"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:197"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'testsuite.at:200' \
  "nc/ref_tst_enum_data_2.nc.3.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "85. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data_2.nc.3.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data_2.nc.3.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:200" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:200"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/ref_tst_enum_data_2.nc.3.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:200: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:200"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:200: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:200"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:200: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:200"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:200: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:200"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:200"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'testsuite.at:203' \
  "nc/nc4_nc_classic_compressed.nc.dmr.bescmd" "     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "86. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:203: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:203"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:203: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:203"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:203: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:203"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:203: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:203"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:203"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'testsuite.at:204' \
  "nc/nc4_nc_classic_no_comp.nc.dmr.bescmd" "        "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "87. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:204: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:204"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:204: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:204"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:204: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:204"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:204: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:204"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:204"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'testsuite.at:205' \
  "nc/nc4_strings.nc.dmr.bescmd" "                   "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "88. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:205: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:205"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:205: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:205"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:205: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:205"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:205: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:205"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'testsuite.at:206' \
  "nc/nc4_strings_comp.nc.dmr.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "89. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings_comp.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:206: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:206"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:206: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:206"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:206: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:206"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:206: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:206"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'testsuite.at:207' \
  "nc/nc4_unsigned_types.nc.dmr.bescmd" "            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "90. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:207: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:207"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:207: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:207"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:207: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:207"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:207: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:207"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'testsuite.at:208' \
  "nc/nc4_unsigned_types_comp.nc.dmr.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "91. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:208: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:208"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:208"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:208: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:208"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:208"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:208: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:208"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:208"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:208: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:208"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:208"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'testsuite.at:209' \
  "nc/ref_tst_compound.nc.dmr.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "92. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:209: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:209"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:209: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:209"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:209: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:209"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:209: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:209"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'testsuite.at:210' \
  "nc/ref_tst_compound2.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "93. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound2.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:210: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:210"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:210: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:210"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:210: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:210"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:210: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:210"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:210"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'testsuite.at:211' \
  "nc/ref_tst_compound3.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "94. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound3.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:211: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:211"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:211: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:211"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:211: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:211"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:211: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:211"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:211"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'testsuite.at:212' \
  "nc/ref_tst_compound4.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "95. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound4.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound4.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound4.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:212: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:212"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:212: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:212"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:212: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:212"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:212: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:212"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:212"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'testsuite.at:213' \
  "nc/ref_tst_compound5.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "96. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound5.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound5.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound5.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:213: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:213"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:213: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:213"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:213: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:213"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:213: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:213"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:213"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'testsuite.at:214' \
  "nc/ref_tst_enum_data.nc.dmr.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "97. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:214: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:214"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:214: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:214"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:214: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:214"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:214: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:214"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:214"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'testsuite.at:215' \
  "nc/ref_tst_enum_data_1.nc.dmr.bescmd" "           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "98. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data_1.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data_1.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data_1.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:215: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:215"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:215: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:215"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:215: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:215"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:215: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:215"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'testsuite.at:216' \
  "nc/ref_tst_enum_data_2.nc.dmr.bescmd" "           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "99. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data_2.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data_2.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data_2.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:216: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:216"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:216: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:216"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:216: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:216"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:216: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:216"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'testsuite.at:217' \
  "nc/ref_tst_opaque_data.nc.dmr.bescmd" "           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "100. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_opaque_data.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:217: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:217"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:217: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:217"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:217: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:217"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:217: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:217"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'testsuite.at:218' \
  "nc/stringtest.nc.dmr.bescmd" "                    "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "101. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/stringtest.nc.dmr.bescmd
    baseline=$abs_srcdir/nc/stringtest.nc.dmr.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/stringtest.nc.dmr.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:218: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:218"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:218: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:218"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:218: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:218"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:218: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:218"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'testsuite.at:221' \
  "nc/nc4_nc_classic_compressed.nc.dap.bescmd" "     "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "102. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_compressed.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_compressed.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:221: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:221"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:221: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:221"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:221: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:221"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:221: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:221"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'testsuite.at:222' \
  "nc/nc4_nc_classic_no_comp.nc.dap.bescmd" "        "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "103. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_nc_classic_no_comp.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_nc_classic_no_comp.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:222: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:222"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:222: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:222"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:222: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:222"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:222: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:222"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'testsuite.at:223' \
  "nc/nc4_strings.nc.dap.bescmd" "                   "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "104. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_strings.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:223: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:223"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:223: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:223"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:223: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:223"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:223: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:223"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'testsuite.at:224' \
  "nc/nc4_strings_comp.nc.dap.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "105. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_strings_comp.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_strings_comp.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_strings_comp.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:224: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:224"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:224: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:224"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:224: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:224"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:224: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:224"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'testsuite.at:225' \
  "nc/nc4_unsigned_types.nc.dap.bescmd" "            "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "106. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:225: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:225"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:225: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:225"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:225: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:225"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:225: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:225"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'testsuite.at:226' \
  "nc/nc4_unsigned_types_comp.nc.dap.bescmd" "       "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "107. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.dap.bescmd
    baseline=$abs_srcdir/nc/nc4_unsigned_types_comp.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/nc4_unsigned_types_comp.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:226: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:226"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:226: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:226"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:226: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:226"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:226: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:226"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:226"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'testsuite.at:227' \
  "nc/ref_tst_compound.nc.dap.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "108. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:227: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:227"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:227: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:227"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:227: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:227"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:227: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:227"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'testsuite.at:228' \
  "nc/ref_tst_compound2.nc.dap.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "109. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound2.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound2.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound2.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:228: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:228"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:228"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:228: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:228"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:228"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:228: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:228"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:228"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:228: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:228"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:228"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'testsuite.at:229' \
  "nc/ref_tst_compound3.nc.dap.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "110. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound3.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound3.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound3.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:229: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:229"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:229: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:229"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:229: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:229"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:229: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:229"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:229"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'testsuite.at:230' \
  "nc/ref_tst_compound4.nc.dap.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "111. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound4.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound4.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound4.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:230: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:230"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:230: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:230"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:230: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:230"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:230: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:230"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'testsuite.at:231' \
  "nc/ref_tst_compound5.nc.dap.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "112. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_compound5.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_compound5.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_compound5.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:231: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:231"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:231: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:231"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:231: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:231"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:231: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:231"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'testsuite.at:232' \
  "nc/ref_tst_enum_data.nc.dap.bescmd" "             "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "113. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:232: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:232"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:232: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:232"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:232: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:232"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:232: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:232"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'testsuite.at:233' \
  "nc/ref_tst_enum_data_1.nc.dap.bescmd" "           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "114. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_enum_data_1.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_enum_data_1.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_enum_data_1.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:233: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:233"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:233: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:233"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:233: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:233"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:233: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:233"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'testsuite.at:235' \
  "nc/ref_tst_opaque_data.nc.dap.bescmd" "           "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "115. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/ref_tst_opaque_data.nc.dap.bescmd
    baseline=$abs_srcdir/nc/ref_tst_opaque_data.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/ref_tst_opaque_data.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:235: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:235"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:235: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:235"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:235: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:235"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:235: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:235"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:235"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'testsuite.at:236' \
  "nc/stringtest.nc.dap.bescmd" "                    "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "116. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/stringtest.nc.dap.bescmd
    baseline=$abs_srcdir/nc/stringtest.nc.dap.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/stringtest.nc.dap.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:236: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:236"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:236: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:236"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:236: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:236"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:236: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:236"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:236"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'testsuite.at:239' \
  "nc/zero_length_array.nc.6.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "117. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.6.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.6.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.6.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:239: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:239"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:239: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:239"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:239: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:239"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:239: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:239"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:239"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'testsuite.at:240' \
  "nc/zero_length_array.nc.7.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "118. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.7.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.7.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.7.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:240: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:240"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:240: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:240"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:240: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:240"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:240: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:240"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'testsuite.at:241' \
  "nc/zero_length_array.nc.8.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "119. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.8.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.8.bescmd.baseline


    feature=


    if test -n "$feature"
then :
  printf "%s\n" "testsuite.at:241" >"$at_check_line_file"
(test -z "$(grep $feature $top_srcdir/modules/configured_features.txt)") \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:241"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone -c $bes_conf -i nc/zero_length_array.nc.8.bescmd; skip if not $repeat"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:241: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:241"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:241: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:241"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:241: besstandalone -c \$abs_builddir/\$bes_conf -i \$input | getdap -Ms -"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite.at:241"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input | getdap -Ms -
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:241: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:241"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'testsuite.at:243' \
  "nc/zero_length_array.nc.9.bescmd" "               "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "120. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.9.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.9.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.9.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:243: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:243"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:243: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:243"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:243: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:243"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:243: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:243"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:243"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'testsuite.at:244' \
  "nc/zero_length_array.nc.10.bescmd" "              "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "121. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/zero_length_array.nc.10.bescmd
    baseline=$abs_srcdir/nc/zero_length_array.nc.10.bescmd.baseline

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/zero_length_array.nc.10.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:244: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:244"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:244: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:244"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:244: besstandalone -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone -c $abs_builddir/$bes_conf -i $input" "testsuite.at:244"
( $at_check_trace; besstandalone -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }

            getdap4 -D -M -s stdout > stdout.txt
    mv stdout.txt stdout

            sed 's@<Value>[0-9a-f]\{8\}</Value>@removed checksum@g' < stdout > stdout.sed
        mv stdout.sed stdout

            sed -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\} [0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_.[0-9]\{3,6\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_[ a-zA-Z]\{0,5\}@_DATE_TIME_SUB_@g' \
    -e 's@_DATE_TIME_SUB_\(Hyrax-[-0-9a-zA-Z.]*\)*@removed date-time@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

            sed -r -e 's@<Value>[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@<Value>[A-z_.]*-[0-9]*\.[0-9]*\.[0-9]*</Value>@<Value>removed-version</Value>@g' \
    -e 's@dmrpp:version="[0-9]*\.[0-9]*\.[0-9]*"@removed-dmrpp:version@g' \
    -e 's@[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?@removed-version@g' \
    < stdout > stdout.sed
    mv stdout.sed stdout

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:244: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:244"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:244"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'testsuite.at:246' \
  "nc/string_attribute_values.nc.2.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "122. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/string_attribute_values.nc.2.bescmd
    baseline=$abs_srcdir/nc/string_attribute_values.nc.2.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/string_attribute_values.nc.2.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:246: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:246"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:246: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:246"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:246: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:246"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:246: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:246"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'testsuite.at:247' \
  "nc/string_attribute_values.nc.3.bescmd" "         "
at_xfail=no
      test z = zxfail && at_xfail=yes
(
  printf "%s\n" "123. $at_setup_line: testing $at_desc ..."
  $at_traceon



    input=$abs_srcdir/nc/string_attribute_values.nc.3.bescmd
    baseline=$abs_srcdir/nc/string_attribute_values.nc.3.bescmd.baseline
    # AT_XFAIL_IF is always run first regardless where it appears. jhrg 5/27/22

    repeat=

    if test -n "$repeat" -a x$repeat = xrepeat -o x$repeat = xcached
then :
  repeat="-r 3"
fi

    if test -z "$at_verbose"
then :
  echo "COMMAND: besstandalone $repeat -c $bes_conf -i nc/string_attribute_values.nc.3.bescmd"
fi

    if test -n "$baselines" -a x$baselines = xyes
then :

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:247: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:247"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:247: mv stdout \$baseline.tmp"
at_fn_check_prepare_dynamic "mv stdout $baseline.tmp" "testsuite.at:247"
( $at_check_trace; mv stdout $baseline.tmp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }


else $as_nop

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:247: besstandalone \$repeat -c \$abs_builddir/\$bes_conf -i \$input"
at_fn_check_prepare_dynamic "besstandalone $repeat -c $abs_builddir/$bes_conf -i $input" "testsuite.at:247"
( $at_check_trace; besstandalone $repeat -c $abs_builddir/$bes_conf -i $input
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; tee stdout <"$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }

        { set +x
printf "%s\n" "$at_srcdir/testsuite.at:247: diff -b -B \$baseline stdout"
at_fn_check_prepare_dynamic "diff -b -B $baseline stdout" "testsuite.at:247"
( $at_check_trace; diff -b -B $baseline stdout
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:247"
$at_failed && at_fn_log_failure
$at_traceon; }


fi

      set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
